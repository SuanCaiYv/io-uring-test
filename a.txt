enter:
if SQPOLL {
    wake_up_kernel_sq_thread_if_asked();
    wait_for_empty_sqe_available_if_asked();
} else if to_submit > 0 {
    submit_sqe();
    if GET_EVENTS {
        if IO_POLL {
            io_poll_check();
            return;
        }
    }
}

if GET_EVENTS {
    if IO_POLL {
        io_poll_check(); // loop for every sqe request and for every request, loop for io operation.
    } else {
        io_cqring_wait(); // wait for sqe processed and update cq
    }
}

io_poll_check:
curr = 0;
loop min > curr {
    curr += io_do_iopoll();
}

if SQ_POLL {
    wake() && wait_empty();
    if GET_EVENTS {
        if IO_POLL {
            io_poll_check();
            return;
        } else {
            io_cqring_wait();
        }
    } else {
        return min;
    }
} else {
    submit_sqe();
    if GET_EVENTS {
        if IO_POLL {
            io_poll_check();
            return;
        } else {
            io_cqring_wait();
        }
    } else {
        return min;
    }
}